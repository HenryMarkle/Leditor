name: Build and Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Clone Drizzle
      run: git clone --branch embedded https://github.com/HenryMarkle/Drizzle

    - name: Setting up Drizzle
      run: |
        cd ./Drizzle
        dotnet restore
        dotnet run --project Drizzle.Transpiler
        dotnet build --configuration Release

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release --output ./output

    - name: Copy assets folder to output directory
      run: cp -r ./Leditor/assets ./output/assets

    - name: Archive output
      run: zip -r linux-output.zip ./output

    - name: Create GitHub Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v0.9.85.`.${{ github.run_number }}
        draft: false
        prerelease: false

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-binaries
        path: ./linux-output.zip

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Clone Drizzle
      run: git clone --branch embedded https://github.com/HenryMarkle/Drizzle

    - name: Setting up Drizzle
      run: |
        cd ./Drizzle
        dotnet restore
        dotnet run --project Drizzle.Transpiler
        dotnet build --configuration Release

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release

    - name: Publish
      run: dotnet publish --configuration Release --output ./output

    - name: Copy assets folder to output directory
      run: Copy-Item -Recurse -Path ./Leditor/assets -Destination ./output/assets

    - name: Archive output
      run: Compress-Archive -Path ./output/* -DestinationPath windows-output.zip

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-binaries
        path: ./windows-output.zip
